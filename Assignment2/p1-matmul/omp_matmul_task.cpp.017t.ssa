
;; Function void do_mv(double**, double**, double**, int) (_Z5do_mvPPdS0_S0_i)



Symbols to be put in SSA form

{ .MEM }


Incremental SSA update started at block: 0

Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)



void do_mv(double**, double**, double**, int) (double * * a, double * * b, double * * c, int i)
{
  int k;
  int j;
  double D.3055;
  double D.3054;
  double D.3053;
  double * D.3052;
  double * D.3051;
  double * * D.3050;
  double D.3049;
  double * D.3048;
  long unsigned int D.3047;
  long unsigned int D.3046;
  double * D.3045;
  double * * D.3044;
  double D.3043;
  double * D.3042;
  long unsigned int D.3041;
  long unsigned int D.3040;
  double * D.3039;
  double * * D.3038;
  long unsigned int D.3037;
  long unsigned int D.3036;
  bool D.3034;
  bool D.3029;

<bb 2>:
  j_3 = 0;
  goto <bb 7>;

<bb 3>:
  k_5 = 0;
  goto <bb 5>;

<bb 4>:
  D.3036_8 = (long unsigned int) i_7(D);
  D.3037_9 = D.3036_8 * 8;
  D.3038_11 = c_10(D) + D.3037_9;
  D.3039_12 = *D.3038_11;
  D.3040_13 = (long unsigned int) j_1;
  D.3041_14 = D.3040_13 * 8;
  D.3042_15 = D.3039_12 + D.3041_14;
  D.3036_16 = (long unsigned int) i_7(D);
  D.3037_17 = D.3036_16 * 8;
  D.3038_18 = c_10(D) + D.3037_17;
  D.3039_19 = *D.3038_18;
  D.3040_20 = (long unsigned int) j_1;
  D.3041_21 = D.3040_20 * 8;
  D.3042_22 = D.3039_19 + D.3041_21;
  D.3043_23 = *D.3042_22;
  D.3036_24 = (long unsigned int) i_7(D);
  D.3037_25 = D.3036_24 * 8;
  D.3044_27 = a_26(D) + D.3037_25;
  D.3045_28 = *D.3044_27;
  D.3046_29 = (long unsigned int) k_2;
  D.3047_30 = D.3046_29 * 8;
  D.3048_31 = D.3045_28 + D.3047_30;
  D.3049_32 = *D.3048_31;
  D.3046_33 = (long unsigned int) k_2;
  D.3047_34 = D.3046_33 * 8;
  D.3050_36 = b_35(D) + D.3047_34;
  D.3051_37 = *D.3050_36;
  D.3040_38 = (long unsigned int) j_1;
  D.3041_39 = D.3040_38 * 8;
  D.3052_40 = D.3051_37 + D.3041_39;
  D.3053_41 = *D.3052_40;
  D.3054_42 = D.3049_32 * D.3053_41;
  D.3055_43 = D.3043_23 + D.3054_42;
  *D.3042_22 = D.3055_43;
  k_44 = k_2 + 1;

<bb 5>:
  # k_2 = PHI <k_5(3), k_44(4)>
  D.3034_6 = k_2 <= 1023;
  if (D.3034_6 != 0)
    goto <bb 4>;
  else
    goto <bb 6>;

<bb 6>:
  j_45 = j_1 + 1;

<bb 7>:
  # j_1 = PHI <j_3(2), j_45(6)>
  D.3029_4 = j_1 <= 1023;
  if (D.3029_4 != 0)
    goto <bb 3>;
  else
    goto <bb 8>;

<bb 8>:
  return;

}



;; Function void omp_task_matmuld(double**, double**, double**, int) (_Z16omp_task_matmuldPPdS0_S0_i)



Symbols to be put in SSA form

{ .MEM }


Incremental SSA update started at block: 0

Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



void omp_task_matmuld(double**, double**, double**, int) (double * * a, double * * b, double * * c, int nthr)
{
  struct .omp_data_s.0 .omp_data_o.4;

<bb 2>:
  omp_set_num_threads (nthr_1(D));
  .omp_data_o.4.a = a_2(D);
  .omp_data_o.4.b = b_3(D);
  .omp_data_o.4.c = c_4(D);
  __builtin_GOMP_parallel_start (_Z16omp_task_matmuldPPdS0_S0_i._omp_fn.0, &.omp_data_o.4, 0);
  _Z16omp_task_matmuldPPdS0_S0_i._omp_fn.0 (&.omp_data_o.4);
  __builtin_GOMP_parallel_end ();
  a_5 = .omp_data_o.4.a;
  b_6 = .omp_data_o.4.b;
  c_7 = .omp_data_o.4.c;
  return;

}



;; Function <built-in> (_Z16omp_task_matmuldPPdS0_S0_i._omp_fn.0)



Symbols to be put in SSA form

{ .MEM }


Incremental SSA update started at block: 0

Number of blocks in CFG: 16
Number of blocks to update: 11 ( 69%)



<built-in> (struct .omp_data_s.0 * .omp_data_i)
{
  double * * * D.3073;
  double * * * D.3072;
  double * * * D.3071;
  struct .omp_data_s.2 .omp_data_o.3;
  bool D.3069;
  int i;
  bool D.3067;

<bb 15>:

<bb 3>:

<bb 4>:
  D.3067_2 = __builtin_GOMP_single_start ();
  if (D.3067_2 == 1)
    goto <bb 5>;
  else
    goto <bb 10>;

<bb 10>:
  __builtin_GOMP_barrier ();

<bb 11>:
  return;

<bb 5>:
  i_3 = 0;

<bb 9>:
  # i_1 = PHI <i_3(5), i_9(8)>
  D.3069_4 = i_1 <= 1023;
  if (D.3069_4 != 0)
    goto <bb 6>;
  else
    goto <bb 10>;

<bb 6>:
  .omp_data_o.3.i = i_1;
  D.3071_6 = &.omp_data_i_5(D)->a;
  .omp_data_o.3.a = D.3071_6;
  D.3072_7 = &.omp_data_i_5(D)->b;
  .omp_data_o.3.b = D.3072_7;
  D.3073_8 = &.omp_data_i_5(D)->c;
  .omp_data_o.3.c = D.3073_8;

<bb 14>:
  __builtin_GOMP_task (_Z16omp_task_matmuldPPdS0_S0_i._omp_fn.1, &.omp_data_o.3, 0B, 32, 8, 1, 0);

<bb 8>:
  i_9 = i_1 + 1;
  goto <bb 9>;

}



;; Function <built-in> (_Z16omp_task_matmuldPPdS0_S0_i._omp_fn.1)



Symbols to be put in SSA form

{ .MEM }


Incremental SSA update started at block: 0

Number of blocks in CFG: 14
Number of blocks to update: 3 ( 21%)



<built-in> (struct .omp_data_s.2 * .omp_data_i)
{
  double * * D.3063;
  double * * * D.3062;
  double * * D.3061;
  double * * * D.3060;
  double * * D.3059;
  double * * * D.3058;
  int i;

<bb 13>:

<bb 7>:
  i_2 = .omp_data_i_1(D)->i;
  D.3058_3 = .omp_data_i_1(D)->c;
  D.3059_4 = *D.3058_3;
  D.3060_5 = .omp_data_i_1(D)->b;
  D.3061_6 = *D.3060_5;
  D.3062_7 = .omp_data_i_1(D)->a;
  D.3063_8 = *D.3062_7;
  do_mv (D.3063_8, D.3061_6, D.3059_4, i_2);
  return;

}


